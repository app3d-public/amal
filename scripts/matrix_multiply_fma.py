#!/usr/bin/env python3
import os

from jinja2 import Template


def gen_implementation(c1, r1, c2):
    lines = []
    for i in range(c2):
        for j in range(r1):
            expr = f"m1[0][{j}] * m2[{i}][0]"
            for k in range(1, c1):
                expr = f"std::fma(m1[{k}][{j}], m2[{i}][{k}], {expr})"
            lines.append(expr)
    return lines

def main():
    script_dir = os.path.dirname(os.path.abspath(__file__))
    template_path = os.path.join(script_dir, "templates/matrix_multiply_nosimd.tpp.j2")
    with open(template_path) as f:
        template = Template(f.read())
    print("// Generated by matrix_multiply_fma.py\n")
    for c1 in range(2, 5):
        for r1 in range(2, 5):
            for c2 in range(2, 5):
                if r1 == c2:
                    keys = {
                        "C1": c1,
                        "R1": r1,
                        "C2": c2,
                        "R2": c1,
                        "implementation": gen_implementation(c1, r1, c2),
                        "constexpr": ""
                    }
                    print(template.render(**keys))

if __name__ == "__main__":
    main()
